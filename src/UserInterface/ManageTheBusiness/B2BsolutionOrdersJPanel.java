/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.ManageTheBusiness;

import TheBusiness.Business.Business;
import TheBusiness.CustomerManagement.CustomerProfile;
import TheBusiness.MarketModel.Channel;
import TheBusiness.MarketModel.Market;
import TheBusiness.MarketModel.MarketChannelAssignment;
import TheBusiness.MarketModel.SolutionOffer;
import TheBusiness.ProductManagement.Product;
import TheBusiness.SalesManagement.SalesPersonProfile;
import TheBusiness.SolutionOrders.SolutionOrder;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import jdk.jpackage.internal.JPackageToolProvider;

/**
 *
 * @author Sathya
 */
public class B2BsolutionOrdersJPanel extends javax.swing.JPanel {

    /**
     * Creates new form B2BsolutionOrdersJPanel
     */
    JPanel userProcessContainer;
    Business business;
    MarketChannelAssignment mca;
    CustomerProfile selectedCustomerProfile;
    SalesPersonProfile selectedSalesPersonProfile;
    SolutionOffer selectedSolutionOffer;
    public B2BsolutionOrdersJPanel(Business business, JPanel userProcessContainer, SalesPersonProfile spp,CustomerProfile cp) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.business = business;
        this.selectedCustomerProfile = cp;
        this.selectedSalesPersonProfile =spp;  
        this.salesPersonTextField.setText(spp.getPerson().toString());
        this.customerTextField.setText(cp.getCustomerId());
        populateMarketComboBox();
        refreshSolutionOffers();
        DefaultTableModel dtm = (DefaultTableModel)this.customerCartTbl.getModel();
        dtm.setRowCount(1);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        solutionBundleTbl = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        marketCmbBox = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        channelCmbBox = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        customerCartTbl = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        customerTextField = new javax.swing.JTextField();
        salesPersonTextField = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        solutionBundleTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Products", "Price"
            }
        ));
        jScrollPane2.setViewportView(solutionBundleTbl);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 176, 576, 110));

        jLabel3.setText("Solutions");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(265, 142, 68, -1));

        btnBack.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(21, 6, 90, -1));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Solution Orders");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(222, 6, 119, 28));

        marketCmbBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                marketCmbBoxActionPerformed(evt);
            }
        });
        add(marketCmbBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(95, 102, 100, -1));

        jLabel4.setText("Market");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(21, 105, 56, -1));

        jLabel5.setText("Valid Channel");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(259, 105, 80, -1));

        channelCmbBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                channelCmbBoxActionPerformed(evt);
            }
        });
        add(channelCmbBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(357, 102, 100, -1));

        customerCartTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null}
            },
            new String [] {
                "Solutions", "Price"
            }
        ));
        customerCartTbl.setAutoscrolls(false);
        jScrollPane3.setViewportView(customerCartTbl);

        add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(31, 354, 521, 60));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setText("Customer Cart");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(259, 326, 90, -1));

        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 292, -1, -1));

        jButton2.setText("Remove");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(444, 420, -1, -1));

        jButton3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton3.setText("Checkout");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(249, 471, -1, -1));

        jLabel10.setText("Customer");
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(21, 46, 150, -1));

        customerTextField.setEditable(false);
        add(customerTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(21, 68, 160, -1));

        salesPersonTextField.setEditable(false);
        add(salesPersonTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 70, 160, -1));

        jLabel11.setText("Sales person");
        add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 50, 150, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        ((CardLayout) userProcessContainer.getLayout()).next(this.userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void marketCmbBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_marketCmbBoxActionPerformed
        // TODO add your handling code here:
        populateChannelComboBox((Market)this.marketCmbBox.getSelectedItem());
        assignMarketChannel();
        refreshSolutionOffers();
    }//GEN-LAST:event_marketCmbBoxActionPerformed

    private void channelCmbBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_channelCmbBoxActionPerformed
        // TODO add your handling code here:
        assignMarketChannel();
        refreshSolutionOffers();
    }//GEN-LAST:event_channelCmbBoxActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int index = this.solutionBundleTbl.getSelectedRow();
        if(index == -1){
            JOptionPane.showMessageDialog(this, "Row not selected", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
        else{
            this.selectedSolutionOffer=(SolutionOffer)solutionBundleTbl.getValueAt(index, 0);
            refreshCartTbl(this.selectedSolutionOffer);
        }
            
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int index  = customerCartTbl.getSelectedRow();
        if(index==-1){
            JOptionPane.showMessageDialog(this, "Row not selected", "ERROR", JOptionPane.ERROR_MESSAGE);
            return;
        }
        else{
            DefaultTableModel dtm = (DefaultTableModel)this.customerCartTbl.getModel();  
            dtm.removeRow(index);
            this.selectedSolutionOffer=null;
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        if(this.selectedSolutionOffer!=null){
            SolutionOrder solutionOrder = this.business.getMasterSolutionOrderList().newSolutionOrder(this.selectedSolutionOffer, mca, selectedCustomerProfile);
            this.mca.addSolutionOrder(solutionOrder);
            selectedSolutionOffer.addSolutionOrder(solutionOrder);
            JOptionPane.showMessageDialog(this, "Order Placed succssfully");
            DefaultTableModel dtm = (DefaultTableModel)this.customerCartTbl.getModel();
            dtm.setRowCount(0);
        }
        else{
           JOptionPane.showMessageDialog(this, "Cart Empty","ERROR",JOptionPane.ERROR_MESSAGE );
           return;
        }
        
    }//GEN-LAST:event_jButton3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JComboBox<Object> channelCmbBox;
    private javax.swing.JTable customerCartTbl;
    private javax.swing.JTextField customerTextField;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JComboBox marketCmbBox;
    private javax.swing.JTextField salesPersonTextField;
    private javax.swing.JTable solutionBundleTbl;
    // End of variables declaration//GEN-END:variables

    private void refreshSolutionOffers() {
       DefaultTableModel dtm = (DefaultTableModel)solutionBundleTbl.getModel();
       dtm.setRowCount(0);
       if(mca==null){
           return;
       }
       else{
           for(SolutionOffer solutionOffer : this.mca.getSolutionofferlist()){
           Object[] obj = new Object[2];
           obj[0] = solutionOffer;
           obj[1] = solutionOffer.getSolutionPrice();
           dtm.addRow(obj);
          }                   
        }
        
    }

    private void assignMarketChannel() {
        Market market = (Market)this.marketCmbBox.getSelectedItem();
        Channel channel = (Channel)this.channelCmbBox.getSelectedItem();
        if(market==null || channel ==null){
            this.mca=null;
            return;
        }
        else{
            this.mca = this.business.getMarketChannelComboCatalog().finMarketChannelCombo(market, channel);
            refreshSolutionOffers();
        }
    }

    private void populateMarketComboBox() {
        this.marketCmbBox.removeAllItems();
        this.channelCmbBox.removeAllItems();
        for(Market market : this.selectedCustomerProfile.getMarkets()){
            this.marketCmbBox.addItem(market);
        }
    }

    private void populateChannelComboBox(Market market) {
        this.channelCmbBox.removeAllItems();
        if(market == null)
            return;
        else{
            for(Channel channel : market.getValidchannels()){
                this.channelCmbBox.addItem(channel);
            assignMarketChannel();
        }
    }
}

    private void refreshCartTbl(SolutionOffer solutionOffer) {
        DefaultTableModel dtm = (DefaultTableModel)this.customerCartTbl.getModel();
        dtm.setRowCount(0);
        Object[] obj = new Object[2];
        obj[0] = solutionOffer;
        obj[1] = solutionOffer.getSolutionPrice();
        dtm.addRow(obj);
        }
    }

