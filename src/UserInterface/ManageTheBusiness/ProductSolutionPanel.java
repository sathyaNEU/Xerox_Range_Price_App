/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.ManageTheBusiness;

import TheBusiness.Business.Business;
import TheBusiness.MarketModel.Channel;
import TheBusiness.MarketModel.MarketChannelAssignment;
import TheBusiness.MarketModel.MarketChannelComboCatalog;
import TheBusiness.MarketModel.SolutionOffer;
import TheBusiness.MarketModel.SolutionOfferCatalog;
import TheBusiness.ProductManagement.Product;
import TheBusiness.ProductManagement.ProductCatalog;
import TheBusiness.Supplier.Supplier;
import TheBusiness.Supplier.SupplierDirectory;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sathya
 */
public class ProductSolutionPanel extends javax.swing.JPanel {

    /**
     * Creates new form ProductSolutionPanel
     */
        Business business;
    Supplier selectedSupplier;
    ProductCatalog productCatalog;
    JPanel userProcessContainer;
    ArrayList<Product> productList;
    SolutionOfferCatalog solutionOfferCatalog;
    MarketChannelAssignment mca;
    MarketChannelComboCatalog mccc;
    public ProductSolutionPanel(Business business, JPanel userProcessContainer) {
        initComponents();
        this.business = business;
        this.solutionOfferCatalog = new SolutionOfferCatalog();
        this.mca = null;
        this.productList = new ArrayList<>();
        this.mccc = this.business.getMarketChannelComboCatalog();
        this.userProcessContainer = userProcessContainer;
        populateSupplierComboBox();
        populateMarketChannelComboBox();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        lblSupplier = new javax.swing.JLabel();
        cmbSupplier = new javax.swing.JComboBox();
        lblProductCatalogue = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProductCatalog = new javax.swing.JTable();
        lblSalesPrice = new javax.swing.JLabel();
        txtSalesPrice = new javax.swing.JTextField();
        btnAddToCart = new javax.swing.JButton();
        lblItemsInCart = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        solutionBundleTbl = new javax.swing.JTable();
        btnRemoveOrderItem = new javax.swing.JButton();
        btnCheckOut = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        MarketChannelComboBox = new javax.swing.JComboBox();
        viewAllSolutionBtn = new javax.swing.JButton();

        btnBack.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblSupplier.setText("Supplier:");

        cmbSupplier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbSupplierActionPerformed(evt);
            }
        });

        lblProductCatalogue.setText("Product Catalog:");

        tblProductCatalog.setFont(new java.awt.Font("Lucida Grande", 0, 13)); // NOI18N
        tblProductCatalog.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Product Id", "Floor", "Target", "Ceiling"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblProductCatalog);

        lblSalesPrice.setText("Sales Price:");

        btnAddToCart.setText("Add to Cart");
        btnAddToCart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddToCartActionPerformed(evt);
            }
        });

        lblItemsInCart.setText("Solution");

        solutionBundleTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Product Name"
            }
        ));
        jScrollPane2.setViewportView(solutionBundleTbl);

        btnRemoveOrderItem.setText("Remove from Cart");
        btnRemoveOrderItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveOrderItemActionPerformed(evt);
            }
        });

        btnCheckOut.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        btnCheckOut.setText("Save Solution");
        btnCheckOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckOutActionPerformed(evt);
            }
        });

        jLabel1.setText("Market Channel");

        MarketChannelComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        MarketChannelComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MarketChannelComboBoxActionPerformed(evt);
            }
        });

        viewAllSolutionBtn.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        viewAllSolutionBtn.setText("All Solutions");
        viewAllSolutionBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewAllSolutionBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnRemoveOrderItem)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jScrollPane1)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lblProductCatalogue)
                                        .addComponent(lblItemsInCart, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addGap(21, 21, 21)
                                                    .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(lblSupplier, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(cmbSupplier, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGap(57, 57, 57)
                                            .addComponent(MarketChannelComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addGap(88, 88, 88)
                                                .addComponent(btnCheckOut, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(viewAllSolutionBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(38, 38, 38)
                                                .addComponent(lblSalesPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtSalesPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGap(18, 18, 18)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(218, 218, 218)
                        .addComponent(btnAddToCart, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(94, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(btnBack)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSupplier, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbSupplier, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MarketChannelComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblProductCatalogue)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnAddToCart)
                .addGap(18, 18, 18)
                .addComponent(lblItemsInCart)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblSalesPrice)
                            .addComponent(txtSalesPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnRemoveOrderItem)
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCheckOut)
                    .addComponent(viewAllSolutionBtn))
                .addContainerGap(164, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);

    }//GEN-LAST:event_btnBackActionPerformed

    private void cmbSupplierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbSupplierActionPerformed
        // TODO add your handling code here:
        this.selectedSupplier = (Supplier)this.cmbSupplier.getSelectedItem();
        refreshTable(selectedSupplier);
        clearContents();
        refreshSolutionBundleTbl();

    }//GEN-LAST:event_cmbSupplierActionPerformed

    private void btnRemoveOrderItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveOrderItemActionPerformed
        int index = solutionBundleTbl.getSelectedRow();
        if(index==-1)
           JOptionPane.showMessageDialog(this, "No Row selected", "ERROR", JOptionPane.ERROR_MESSAGE );
        else{
            DefaultTableModel dtm =(DefaultTableModel)solutionBundleTbl.getModel();
            int selectedRow = solutionBundleTbl.getSelectedRow();
            Product selectedProduct = (Product)solutionBundleTbl.getValueAt(selectedRow, 0);
            this.productList.remove(selectedProduct);
            dtm.removeRow(selectedRow);
        }
    }//GEN-LAST:event_btnRemoveOrderItemActionPerformed

    private void btnCheckOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckOutActionPerformed
        this.mca = (MarketChannelAssignment)this.MarketChannelComboBox.getSelectedItem();
        if(this.mca==null || this.txtSalesPrice.getText().isBlank())
            JOptionPane.showMessageDialog(this, "Market Channel or price not set for product solution bundle");
        else{
            int price;
            try{
                price = Integer.parseInt(this.txtSalesPrice.getText());
                if(price<1){
                    JOptionPane.showMessageDialog(this, "please enter a valid price value");
                    return;
                }
                    
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(this, "please enter a valid price value");
                return;
            }
            SolutionOffer solutionOffer =  this.solutionOfferCatalog.newSolutionOffer(mca);
            solutionOffer.setTotalPrice(price);       
            for(Product p : this.productList){
                System.out.println("Added -> "+p);
                solutionOffer.addProduct(p);
            }
            System.out.println("Solution offer cart list : "+ solutionOffer.getProducts().size());
            System.out.println("Product Solution Panel "+solutionOffer);
            JOptionPane.showMessageDialog(this, "Solution Created Successfully");
            clearContents();
            
        }        // TODO add your handling code here  

    }//GEN-LAST:event_btnCheckOutActionPerformed

    private void btnAddToCartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddToCartActionPerformed
        // TODO add your handling code here:
        int index = tblProductCatalog.getSelectedRow();
        if(index==-1)
            JOptionPane.showMessageDialog(this, "Price field missing or Row not selected","WARNING" , JOptionPane.WARNING_MESSAGE);
        else{
            Product selectedProduct = (Product)this.tblProductCatalog.getValueAt(index, 0);
            boolean result = checkIfSolutionContainsProduct(selectedProduct);
            if(result==true){
              JOptionPane.showMessageDialog(this, "Already Exist","WARNING" , JOptionPane.WARNING_MESSAGE);
              return;
            }
            this.productList.add(selectedProduct);
            refreshSolutionBundleTbl();
        }
    }//GEN-LAST:event_btnAddToCartActionPerformed

    private void MarketChannelComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MarketChannelComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MarketChannelComboBoxActionPerformed

    private void viewAllSolutionBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewAllSolutionBtnActionPerformed
        // TODO add your handling code here:
        AllSolutionsJPanel allSolutionsJPanel = new AllSolutionsJPanel(business, userProcessContainer);
        this.userProcessContainer.add("allSolutionsJPanel",allSolutionsJPanel);
        ((CardLayout)this.userProcessContainer.getLayout()).next(this.userProcessContainer);
    }//GEN-LAST:event_viewAllSolutionBtnActionPerformed
    private void refreshSolutionBundleTbl() {
       DefaultTableModel dtm = (DefaultTableModel)solutionBundleTbl.getModel();
       dtm.setRowCount(0);
//       for(SolutionOffer solutionOffer : this.solutionOfferCatalog.getSolutionoffers()){
//           Object[] obj = new Object[2];
//           obj[0] = solutionOffer;
//           obj[1] = solutionOffer.getSolutionPrice();
//           dtm.addRow(obj);
//       }
        if(productList==null){
            JOptionPane.showMessageDialog(this, "Solution  Empty", "WARNING", JOptionPane.WARNING_MESSAGE);
            return;
        }
        for(Product product : this.productList){
            Object[] obj = new Object[1];
            obj[0] = product;
            dtm.addRow(obj);
        }

    }
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox MarketChannelComboBox;
    private javax.swing.JButton btnAddToCart;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCheckOut;
    private javax.swing.JButton btnRemoveOrderItem;
    private javax.swing.JComboBox cmbSupplier;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblItemsInCart;
    private javax.swing.JLabel lblProductCatalogue;
    private javax.swing.JLabel lblSalesPrice;
    private javax.swing.JLabel lblSupplier;
    private javax.swing.JTable solutionBundleTbl;
    private javax.swing.JTable tblProductCatalog;
    private javax.swing.JTextField txtSalesPrice;
    private javax.swing.JButton viewAllSolutionBtn;
    // End of variables declaration//GEN-END:variables

 private void refreshTable(Supplier supplier) {
        DefaultTableModel dtm = (DefaultTableModel)this.tblProductCatalog.getModel();
        dtm.setRowCount(0);
        if(supplier!=null)      
            for(Product product : supplier.getProductCatalog().getProductList()){
                Object[] obj = new Object[4];
                obj[0] = product;
                obj[1] = product.getFloorPrice();
                obj[2] = product.getTargetPrice();
                obj[3] = product.getCeilingPrice();
                dtm.addRow(obj);
            }
        }
     private void populateSupplierComboBox() {
        SupplierDirectory supplierDirectory = this.business.getSupplierDirectory();
        this.cmbSupplier.removeAllItems();
        for(Supplier supplier : supplierDirectory.getSuplierList()){
            this.cmbSupplier.addItem(supplier);
        }
    }

    private boolean checkIfSolutionContainsProduct(Product selectedProduct) {
        for(Product p : this.productList){
            if(p.equals(selectedProduct))
                return true;
        }
        return false;
    }

    private void populateMarketChannelComboBox() {
        this.MarketChannelComboBox.removeAllItems();
        for(MarketChannelAssignment mca : this.mccc.getMcalist()){
            this.MarketChannelComboBox.addItem(mca);
        }
    }

    private void clearContents() {
        DefaultTableModel dtm =(DefaultTableModel)this.solutionBundleTbl.getModel();
        dtm.setRowCount(0);
        txtSalesPrice.setText("");
        this.productList=new ArrayList<>();
    }
}
